
plugins {
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'jacoco'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

version = '3.1.0'

// coveralls plugin depends on xml format report

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.1'
    compile group: 'org.json', name: 'json', version: '20160212'
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile 'com.auth0:java-jwt:3.3.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'

    testCompile "com.github.tomakehurst:wiremock:2.1.12"


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage/report.html")
    }
}
